buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }

        maven { url = 'https://maven.parchmentmc.org' }
    }

    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
    }
}

apply plugin: 'net.minecraftforge.gradle'

repositories{
    maven {
        url "https://www.cursemaven.com"
    }
    maven {

        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    jcenter()
    mavenCentral()
}

apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'
apply plugin: 'org.spongepowered.mixin'

version = '1.10.1'
group = 'com.bottomtextdanny'
archivesBaseName = 'dannys_expansion'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: "official", version: "1.18.1"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=dannys_expansion.mixins.json"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                dannys_expansion {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            arg "-mixin.config=dannys_expansion.mixins.json"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                dannys_expansion {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "dannys_expansion.refmap.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    //implementation fg.deobf("curse.maven:alexs_mobs-426558:3575698")
    //implementation fg.deobf("curse.maven:citadel-331936:3574790")
    implementation fg.deobf("curse.maven:mob-battle-mod-268746:3573470")
    implementation fg.deobf("curse.maven:torohealth-damage-indicators-245733:3556931")
    compileOnly fg.deobf("mezz.jei:jei-1.18:9.0.0.40:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18:9.0.0.40")
    minecraft 'net.minecraftforge:forge:1.18.1-39.0.59'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "dannys_expansion",
                "Specification-Vendor": "bottomtextdanny",
                "Specification-Version": "1.10.2", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"bottomtextdanny",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "dannys_expansion.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}